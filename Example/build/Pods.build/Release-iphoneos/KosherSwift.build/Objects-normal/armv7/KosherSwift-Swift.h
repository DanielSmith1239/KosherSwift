// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSDate;

@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
- (BOOL)date:(NSDate * _Nonnull)firstDate isSameDayAs:(NSDate * _Nonnull)anotherDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isSameWeekAs:(NSDate * _Nonnull)anotherDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isSameMonthAs:(NSDate * _Nonnull)anotherDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isSameYearAs:(NSDate * _Nonnull)anotherDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isSameEraAs:(NSDate * _Nonnull)anotherDate;
@end


@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
+ (BOOL)isHebrewYearContainingDateALeapYear:(NSDate * _Nonnull)date;
+ (NSCalendar * _Nonnull)hebrewCalendar;
@end


@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
- (NSDate * _Nonnull)firstDayOfTheWeek;
- (NSDate * _Nonnull)firstDayOfTheWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)lastDayOfTheWeek;
- (NSDate * _Nonnull)lastDayOfTheWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)firstDayOfTheMonth;
- (NSDate * _Nonnull)firstDayOfTheMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)lastDayOfTheMonth;
- (NSDate * _Nonnull)lastDayOfTheMonthUsingReferenceDate:(NSDate * _Nonnull)date;
@end


@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
- (NSInteger)weekOfMonthInDate:(NSDate * _Nonnull)date;
- (NSInteger)weekOfYearInDate:(NSDate * _Nonnull)date;
- (NSInteger)weekdayInDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsInDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesInDate:(NSDate * _Nonnull)date;
- (NSInteger)hoursInDate:(NSDate * _Nonnull)date;
- (NSInteger)daysInDate:(NSDate * _Nonnull)date;
- (NSInteger)monthsInDate:(NSDate * _Nonnull)date;
- (NSInteger)yearsInDate:(NSDate * _Nonnull)date;
- (NSInteger)eraInDate:(NSDate * _Nonnull)date;
@end


@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
- (NSDate * _Nonnull)dateByAddingSeconds:(NSInteger)seconds toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingMinutes:(NSInteger)minutes seconds:(NSInteger)seconds toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingHours:(NSInteger)hours toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingDays:(NSInteger)days toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingWeeks:(NSInteger)weeks toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingMonths:(NSInteger)months toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateByAddingYears:(NSInteger)years toDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingSeconds:(NSInteger)seconds fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingMinutes:(NSInteger)minutes seconds:(NSInteger)seconds fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingHours:(NSInteger)hours fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingDays:(NSInteger)days fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingWeeks:(NSInteger)weeks fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingMonths:(NSInteger)months fromDate:(NSDate * _Nonnull)date;
- (NSDate * _Nonnull)dateBySubtractingYears:(NSInteger)years fromDate:(NSDate * _Nonnull)date;
@end


@interface NSCalendar (SWIFT_EXTENSION(KosherSwift))
- (NSInteger)secondsPerMinute;
- (NSInteger)secondsPerMinuteUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsPerHour;
- (NSInteger)secondsPerHourUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesPerHour;
- (NSInteger)minutesPerHourUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsPerDay;
- (NSInteger)secondsPerDayUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesPerDay;
- (NSInteger)minutesPerDayUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)hoursPerDay;
- (NSInteger)hoursPerDayUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsPerWeek;
- (NSInteger)secondsPerWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesPerWeek;
- (NSInteger)minutesPerWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)hoursPerWeek;
- (NSInteger)hoursPerWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)daysPerWeek;
- (NSInteger)daysPerWeekUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsPerMonth;
- (NSInteger)secondsPerMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesPerMonth;
- (NSInteger)minutesPerMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)hoursPerMonth;
- (NSInteger)hoursPerMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)daysPerMonth;
- (NSInteger)daysPerMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)weeksPerMonth;
- (NSInteger)weeksPerMonthUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsPerYear;
- (NSInteger)secondsPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)minutesPerYear;
- (NSInteger)minutesPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)hoursPerYear;
- (NSInteger)hoursPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)daysPerYear;
- (NSInteger)daysPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)weeksPerYear;
- (NSInteger)weeksPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)monthsPerYear;
- (NSInteger)monthsPerYearUsingReferenceDate:(NSDate * _Nonnull)date;
- (NSInteger)secondsFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)minutesFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)hoursFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)daysFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)weeksFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)weeksOfYearFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)weeksOfMonthFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)monthsFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (NSInteger)yearsFromDate:(NSDate * _Nonnull)fromDate toDate:(NSDate * _Nonnull)toDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isBeforeDate:(NSDate * _Nonnull)anotherDate;
- (BOOL)date:(NSDate * _Nonnull)firstDate isAfterDate:(NSDate * _Nonnull)anotherDate;
@end


@interface NSDate (SWIFT_EXTENSION(KosherSwift))
+ (NSDate * _Nonnull)dateWithHebrewMonth:(NSInteger)month andDay:(NSInteger)day;
+ (NSDate * _Nonnull)dateWithHebrewMonth:(NSInteger)month andDay:(NSInteger)day andYear:(NSInteger)year;
@end


@interface NSDate (SWIFT_EXTENSION(KosherSwift))
- (NSString * _Nonnull)about;
- (NSString * _Nonnull)dayNameOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthNameOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthAndYearOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthAbbreviationAndYearOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthAbbreviationOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthAndDayOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)dayOfMonthOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)monthAndDayAndYearOnCalendar:(NSCalendar * _Nonnull)calendar;
- (NSString * _Nonnull)dayOfMonthAndYearOnCalendar:(NSCalendar * _Nonnull)calendar;
@end

@class NSDateComponents;

@interface NSDate (SWIFT_EXTENSION(KosherSwift))
+ (NSDate * _Nonnull)dateWithDay:(NSInteger)day month:(NSInteger)month year:(NSInteger)year;
+ (NSDate * _Nonnull)dateWithDay:(NSInteger)day Month:(NSInteger)month Year:(NSInteger)year andCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSDate * _Nonnull)dateWithEra:(NSInteger)era year:(NSInteger)year month:(NSInteger)month day:(NSInteger)day hour:(NSInteger)hour minute:(NSInteger)minute second:(NSInteger)second week:(NSInteger)week weekday:(NSInteger)weekday weekdayOrdinal:(NSInteger)weekdayOrdinal andCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultEraForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultYearForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultMonthForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultDayForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultHourForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultMinuteForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultSecondForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultWeekForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultWeekdayForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultWeekdayOrdinalForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSInteger)defaultEra;
+ (NSInteger)defaultYear;
+ (NSInteger)defaultMonth;
+ (NSInteger)defaultDay;
+ (NSInteger)defaultHour;
+ (NSInteger)defaultMinute;
+ (NSInteger)defaultSecond;
+ (NSInteger)defaultWeek;
+ (NSInteger)defaultWeekday;
+ (NSInteger)defaultWeekdayOrdinal;
+ (NSDateComponents * _Nonnull)defaultComponents;
+ (NSDateComponents * _Nonnull)defaultComponentsForCalendar:(NSCalendar * _Nonnull)calendar;
+ (NSCalendar * _Nonnull)defaultCalendar;
@end


@interface NSDateComponents (SWIFT_EXTENSION(KosherSwift))
@end

#pragma clang diagnostic pop
